instance_groups:
- name: elasticsearch_master
  vm_type: t3.medium
  instances: 1
  networks:
  - name: services
    static_ips:
    - (( replace ))
    - (( grab terraform_outputs.logsearch_static_ips.[0]))

- name: elasticsearch_data
  instances: 3
  vm_type: t3.large

- name: maintenance
  vm_type: t3.medium
  instances: 1
  jobs:
  - name: curator
    release: logsearch
    properties:
      curator:
        purge_logs:
          retention_period: 90

- name: redis
  instances: 1
  vm_type: t3.small

- name: archiver
  vm_type: t3.medium
  instances: 1
  jobs:
  - name: ingestor_cloudfoundry-firehose
    properties:
      cloudfoundry:
        api_endpoint: https://api.dev.us-gov-west-1.aws-us-gov.cloud.gov

- name: ingestor
  vm_type: t3.medium
  instances: 1
  jobs:
  - name: ingestor_cloudfoundry-firehose
    properties:
      cloudfoundry:
        api_endpoint: https://api.dev.us-gov-west-1.aws-us-gov.cloud.gov

- name: kibana
  vm_type: t3.large
  instances: 1
  jobs:
  - name: kibana-auth-plugin
    properties:
      kibana-auth:
        cloudfoundry:
          api_endpoint: https://api.dev.us-gov-west-1.aws-us-gov.cloud.gov
          system_domain: dev.us-gov-west-1.aws-us-gov.cloud.gov
  - name: route_registrar
    consumes:
      nats:
        from: nats
        deployment: cf-development
    properties:
      route_registrar:
        routes:
        - name: logsearch
          uris: [logs.dev.us-gov-west-1.aws-us-gov.cloud.gov]
  - name: bosh-dns-aliases
    release: bosh-dns-aliases
    properties:
      aliases:
      - domain: cf.internal
        targets:
        - deployment: cf-development
          domain: bosh
          #instance_group: nats
          #network: default
          query: '*'
  - name: bosh-dns
    properties:
      aliases:
        alertmanager-production.service.cf.internal:
        - "*.alertmanager.production-monitoring.prometheus-production.bosh"
        alertmanager-staging.service.cf.internal:
        - "*.alertmanager.staging-monitoring.prometheus-staging.bosh"
        prometheus-production.service.cf.internal:
        - "*.prometheus.production-monitoring.prometheus-production.bosh"
        prometheus-staging.service.cf.internal:
        - "*.prometheus.staging-monitoring.prometheus-staging.bosh"
        prometheus-tooling.service.cf.internal:
        - "*.prometheus-tooling.production-monitoring.prometheus-production.bosh"
      api:
        client:
          tls: "((/dns_api_client_tls))"
        server:
          tls: "((/dns_api_server_tls))"
      cache:
        enabled: true
      health:
        client:
          tls: "((/dns_healthcheck_client_tls))"
        enabled: true
        server:
          tls: "((/dns_healthcheck_server_tls))"
      log_level: WARN
    release: bosh-dns
- name: smoke-tests
  vm_type: t3.small
  jobs:
  - name: smoke_tests
    properties:
      smoke_tests:
        count_test:
          run: true
          minimum: 500
          time_interval: "5m"
          time_field: "@timestamp"
          index_pattern: "logs-app-*"

stemcells:
- alias: default
  name: bosh-aws-xen-hvm-ubuntu-bionic-go_agent
  version: latest
